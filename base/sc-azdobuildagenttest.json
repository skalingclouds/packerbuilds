{
    "variables": {
        "client_id": "{{env `CLIENTID`}}",
        "client_secret": "{{env `CLIENTSECRET`}}",
        "subscription_id": "{{env `AZURE_SUBSCRIPTION`}}",
        "tenant_id": "{{env `AZURE_TENANT`}}",
        "resource_group": "{{env `AZURE_RESOURCE_GROUP`}}",
        "storage_account": "{{env `AZURE_STORAGE_ACCOUNT`}}",
        "location": "{{env `AZURE_LOCATION`}}"

    },
    "sensitive-variables": ["client_secret"],
    "builders": [
        {
            "type": "azure-arm",
            "client_id": "{{user `client_id`}}",
            "client_secret": "{{user `client_secret`}}",
            "subscription_id": "{{user `subscription_id`}}",
            "tenant_id": "{{user `tenant_id`}}",
            "managed_image_resource_group_name": "{{user `resource_group`}}",
            "managed_image_name": "scazdobuildagent",
            "os_type": "Windows",
            "image_publisher": "MicrosoftWindowsServer",
            "image_offer": "WindowsServer",
            "image_sku": "2019-Datacenter",
            "communicator": "winrm",
            "winrm_use_ssl": true,
            "winrm_insecure": true,
            "winrm_timeout": "30m",
            "winrm_username": "packer",
            "location": "West US 2",
            "vm_size": "Standard_D16_v3",
            "os_disk_size_gb": "256",
            "async_resourcegroup_delete":true
        }
    ],
    "provisioners": [
        {
            "type": "powershell",
            "inline":[
                "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))",
                "Set-MpPreference -DisableRealtimeMonitoring $false",
                "Get-ScheduledTask -TaskName ServerManager | Disable-ScheduledTask -Verbose",
                "choco feature enable -n=allowGlobalConfirmation",
                "choco install python --version 3.5.4 -y",
                "choco install googlechrome -y",
                "choco install 7zip -y",
                "choco install vscode -y",
                "choco install azure-cli -y",
                "choco install azcopy -y",
                "choco install azurepowershell -y",
                "choco install sql-server-management-studio -y"
            ]
        },

        {
            "type": "powershell",
            "inline": [
                "if( Test-Path $Env:SystemRoot\\System32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\System32\\Sysprep\\unattend.xml -Force}",
                "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
                "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
            ]
        }
    ]
}
