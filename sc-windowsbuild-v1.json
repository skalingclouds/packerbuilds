{
    "variables": {
        "client_id": "",
        "client_secret": "",
        "tenant_id": "",
        "subscription_id": "",
        "managed_image_prefix": "",
        "managed_image_resource_group_name": "",
        "PackageLocation": "",
        "WorkingDirectory": "{{env `System_DefaultWorkingDirectory`}}" 
      },
    "builders": [{
    "type": "azure-arm",
    "client_id": "58407f81-03e0-4e03-a7f7-3dd0844c9e5c",
    "client_secret": "C0nn3ct4",
    "tenant_id": "72f988bf-86f1-41af-91ab-2d7cd011db47",
    "subscription_id": "d7cc508e-d2cc-46d7-8185-5b4cb24827bb",
    "shared_image_gallery_destination": {
      "resource_group": "sc-rg-infraautomation-01",
      "gallery_name": "scsig01",
      "image_name": "packerbase",
      "image_version": "1.0.0",
      "replication_regions": ["westus", "eastus", "eastus2"]},
    "managed_image_resource_group_name": "sc-rg-infraautomation-01",
    "managed_image_name": "scpackerbaseimage",
    "os_type": "Windows",
    "image_publisher": "MicrosoftWindowsServer",
    "image_offer": "WindowsServer",
    "image_sku": "2016-Datacenter",
    "communicator": "winrm",
    "winrm_use_ssl": true,
    "winrm_insecure": true,
    "winrm_timeout": "3m",
    "winrm_username": "packer",
    "azure_tags": {
        "dept": "Engineering",
        "task": "Image deployment"
    },
    "location": "West US 2",
    "vm_size": "Standard_D16s_v3",
    "disk_additional_size": 150
  }],
  "Provisioners": [ 
    {
        "type": "powershell",
        "script": "tls_config.ps1" 
    },    
    {
        "type": "powershell",
        "script": "packer_config.ps1"
    },
    {
        "type": "powershell",
        "script": "symantec_prep.ps1"
    },  
    {
        "type": "powershell",
        "script": "mount_format_drive.ps1"
    },
    {
        "type": "powershell",
        "script": "melissa_download.ps1"
    },
    {
        "type": "powershell",
        "script": "fa_app_stage.ps1"
    },
    {
    "type": "powershell",
    "inline": [
        " # NOTE: the following *3* lines are only needed if the you have installed the Guest Agent.",
        "  while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
    }
  ]
}
      
